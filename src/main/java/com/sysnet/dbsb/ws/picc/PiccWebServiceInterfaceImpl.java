package com.sysnet.dbsb.ws.picc;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "PiccWebServiceInterfaceImpl", targetNamespace = "http://127.0.0.1:8080/eapdomain/services/PiccWSInterface")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface PiccWebServiceInterfaceImpl {

	/**
	 * 
	 * @param xmlString
	 * @return returns javax.xml.ws.Response<java.lang.String>
	 */
	@WebMethod(operationName = "transBusinessForPICC")
	public Response<String> transBusinessForPICCAsync(
			@WebParam(name = "XMLString", partName = "XMLString") String xmlString);

	/**
	 * 
	 * @param xmlString
	 * @param asyncHandler
	 * @return returns java.util.concurrent.Future<? extends java.lang.Object>
	 */
	@WebMethod(operationName = "transBusinessForPICC")
	public Future<?> transBusinessForPICCAsync(
			@WebParam(name = "XMLString", partName = "XMLString") String xmlString,
			@WebParam(name = "asyncHandler", partName = "asyncHandler") AsyncHandler<String> asyncHandler);

	/**
	 * 
	 * @param xmlString
	 * @return returns java.lang.String
	 */
	@WebMethod
	@WebResult(name = "transBusinessForPICCReturn", partName = "transBusinessForPICCReturn")
	public String transBusinessForPICC(
			@WebParam(name = "XMLString", partName = "XMLString") String xmlString);

}
